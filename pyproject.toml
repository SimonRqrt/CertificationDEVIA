[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "Coach AI running"
version = "0.1.0"
description = "Coach de running pouvant lire les données Garmin et proposer des programmes d'entrainement avec l'IA"
readme = "README.md"
requires-python = ">=3.9"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv"]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "tests/"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--ignore=tests/test_approche_objectif_centree_reel.py",
    "--ignore=tests/test_approche_objectif_centree_demo.py",
    "--ignore=tests/test_rag_knowledge.py",
    "--ignore=tests/test_objectif_centre.py"
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = ["src", "E1_gestion_donnees", "E3_model_IA", "E5_monitoring"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/.venv/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.safety]
ignore = []  # Liste des vulnérabilités à ignorer si nécessaire