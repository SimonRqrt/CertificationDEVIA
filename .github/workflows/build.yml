name: CI Build & Test

on:
  push:
    branches: [ main, developp ]  # Correction: develop au lieu de developp
  pull_request:
    branches: [ main, developp ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']  # Test sur plusieurs versions Python
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Version plus récente
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5  # Version plus récente
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt  # Dépendances de développement séparées
          
      - name: Lint with flake8
        run: |
          # Configuration depuis pyproject.toml ou setup.cfg
          flake8 .
          
      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing
          
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10'  # Upload seulement pour une version
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          
  security-scan:
    runs-on: ubuntu-latest
    needs: build-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Security scan with Safety
        run: safety check --json
        
      - name: Security scan with Bandit
        run: bandit -r . -f json
        
  type-check:
    runs-on: ubuntu-latest
    needs: build-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Type checking with mypy
        run: mypy .  # Configuration depuis pyproject.toml