name: CI Build & Test (Version test)

on:
  push:
    branches: [ main, develop, test-pipeline, 'test-*' ]  # Ajout des branches de test
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Déclenchement manuel

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10']  # Une seule version pour tester plus vite
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.github/requirements/requirements-ci.txt', '.github/requirements/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install test dependencies from pyproject.toml
          pip install -e .[test]
          # Install additional CI dependencies
          pip install -r .github/requirements/requirements-ci.txt
          pip install -r .github/requirements/requirements-dev.txt
          # Verify FastAPI installation
          python -c "import fastapi; print(f'FastAPI {fastapi.__version__} installed')"
          
      - name: Lint with flake8
        run: |
          flake8 . --exclude=.venv,.git,__pycache__,deployment,htmlcov,tests --extend-ignore=E501,W293,W291,W292,E302,E305,F401,F541,E402,F841,E722
          
      - name: Run tests with coverage
        run: |
          pytest
          
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          
  # Jobs de sécurité désactivés pour les tests
  # security-scan:
  #   runs-on: ubuntu-latest
  #   needs: build-test
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
  
  # type-check:
  #   runs-on: ubuntu-latest  
  #   needs: build-test
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'