name: CD Pipeline

on:
  push:
    branches: [ developp ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secrets
        run: |
          cat <<EOF > .env
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          API_KEY=${{ secrets.API_KEY }}
          EOF

      - name: Build and deploy with Docker Compose
        run: |
          echo "üöÄ D√©ploiement en cours..."
          
          # Arr√™ter les conteneurs existants
          cd deployment
          docker compose -f docker-compose-supabase.yml down || true
          
          # Nettoyer les images anciennes
          docker system prune -f
          
          # Rebuild et d√©marrer
          docker compose -f docker-compose-supabase.yml up -d --build
          
          # Attendre que les services soient pr√™ts
          sleep 30
          
          # V√©rifier la sant√© des services
          echo "üîç V√©rification de la sant√© des services..."
          docker compose -f docker-compose-supabase.yml ps

      - name: Health check
        run: |
          echo "üè• Health check des services..."
          
          # Test Django
          curl -f http://localhost:8002/admin/ || echo "‚ùå Django non accessible"
          
          # Test FastAPI
          curl -f http://localhost:8000/docs || echo "‚ùå FastAPI non accessible"
          
          # Test Streamlit
          curl -f http://localhost:8501/ || echo "‚ùå Streamlit non accessible"

      - name: Deployment status
        run: |
          echo "‚úÖ D√©ploiement termin√© sur la branche developp"
          echo "üìä Services disponibles:"
          echo "   - Django: http://localhost:8002"
          echo "   - FastAPI: http://localhost:8000"
          echo "   - Streamlit: http://localhost:8501"
