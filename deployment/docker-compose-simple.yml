services:
  # Service Django (Web + API + Agent IA intégré) - Mode Simplifié Online
  django:
    container_name: coach_ai_django_simple
    build:
      context: ..
      dockerfile: deployment/django.Dockerfile
    ports:
      - "8002:8002"
    env_file:
      - ../.env
    environment:
      - DOCKER_ENV=true
      - DB_TYPE=sqlserver  # Fallback automatique vers SQLite
      - DJANGO_SETTINGS_MODULE=coach_ai_web.settings
    volumes:
      - ../data:/app/data
      - ../E3_model_IA/backend/django_app/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/admin/"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8002"

  # Service Streamlit (Frontend Chat IA) - Mode Simplifié
  streamlit:
    container_name: coach_ai_streamlit_simple
    build:
      context: ..
      dockerfile: deployment/streamlit.Dockerfile
    ports:
      - "8501:8501"
    env_file:
      - ../.env
    environment:
      - DOCKER_ENV=true
    depends_on:
      django:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy (Simplifié)
  nginx:
    container_name: coach_ai_nginx_simple
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/nginx.conf
      - ../E3_model_IA/backend/django_app/static:/var/www/static
    depends_on:
      - django
      - streamlit
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: coach_ai_simple_network