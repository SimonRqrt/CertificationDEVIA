version: '3.8'

# Configuration Docker Compose pour PRODUCTION avec Supabase PostgreSQL obligatoire
# Cette configuration désactive le fallback SQLite pour forcer l'utilisation de PostgreSQL

services:
  django:
    build:
      context: ..
      dockerfile: deployment/django.Dockerfile
    container_name: coach_ai_django_prod
    ports:
      - "8002:8002"
    environment:
      - DOCKER_ENV=true
      - PRODUCTION_MODE=true
      - DB_TYPE=postgresql
      - DISABLE_SQLITE_FALLBACK=true
    env_file:
      - ../.env
    volumes:
      - ../data:/app/data
      - ../E3_model_IA/backend/django_app/templates:/app/templates
      - ../E3_model_IA/backend/django_app/static:/app/static
    networks:
      - coach_ai_production_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  fastapi:
    build:
      context: ..
      dockerfile: deployment/fastapi.Dockerfile
    container_name: coach_ai_fastapi_prod
    ports:
      - "8000:8000"
    environment:
      - DOCKER_ENV=true
      - PRODUCTION_MODE=true
      - DB_TYPE=postgresql
    env_file:
      - ../.env
    volumes:
      - ../data:/app/data
    networks:
      - coach_ai_production_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  streamlit:
    build:
      context: ..
      dockerfile: deployment/streamlit.Dockerfile
    container_name: coach_ai_streamlit_prod
    ports:
      - "8501:8501"
    environment:
      - DOCKER_ENV=true
      - PRODUCTION_MODE=true
    env_file:
      - ../.env
    volumes:
      - ../data:/app/data
    networks:
      - coach_ai_production_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: coach_ai_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-production.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django
      - fastapi
      - streamlit
    networks:
      - coach_ai_production_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  coach_ai_production_network:
    driver: bridge
    # En production, les hébergeurs configurent IPv6 automatiquement

volumes:
  coach_ai_data_prod:
    driver: local