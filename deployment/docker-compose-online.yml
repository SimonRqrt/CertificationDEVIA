services:
  # Service Django (Web + API) - Mode Online avec fallback automatique Azure SQL
  django:
    container_name: coach_ai_django_online
    build:
      context: ..
      dockerfile: deployment/django.Dockerfile
    ports:
      - "8002:8002"
    env_file:
      - ../.env
    environment:
      - DOCKER_ENV=true
      - DB_TYPE=sqlserver
      - DJANGO_SETTINGS_MODULE=coach_ai_web.settings
    volumes:
      - ../data:/app/data
      - ../E3_model_IA/backend/django_app/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/admin/"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8002"

  # Service FastAPI (IA) - Mode Standalone sans conflit Django
  fastapi:
    container_name: coach_ai_fastapi_online
    build:
      context: ..
      dockerfile: deployment/fastapi-standalone.Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/app:/app/E3_model_IA/backend/fastapi_app:/app/E1_gestion_donnees
      - DB_TYPE=sqlserver
    depends_on:
      django:
        condition: service_healthy
    volumes:
      - ../data:/app/data
      - ../knowledge_base:/app/knowledge_base
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  # Service Streamlit (Frontend) - Mode Online
  streamlit:
    container_name: coach_ai_streamlit_online
    build:
      context: ..
      dockerfile: deployment/streamlit.Dockerfile
    ports:
      - "8501:8501"
    env_file:
      - ../.env
    environment:
      - DOCKER_ENV=true
    depends_on:
      django:
        condition: service_healthy
      fastapi:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy (Online)
  nginx:
    container_name: coach_ai_nginx_online
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../E3_model_IA/backend/django_app/static:/var/www/static
    depends_on:
      - django
      - fastapi
      - streamlit
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: coach_ai_online_network