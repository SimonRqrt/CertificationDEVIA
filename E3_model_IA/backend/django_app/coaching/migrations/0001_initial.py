# Generated by Django 4.2.7 on 2025-07-18 15:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('activities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Plan name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('goal', models.CharField(choices=[('5k', '5K Race'), ('10k', '10K Race'), ('half_marathon', 'Half Marathon'), ('marathon', 'Marathon'), ('weight_loss', 'Weight Loss'), ('endurance', 'Endurance'), ('speed', 'Speed'), ('general_fitness', 'General Fitness')], max_length=100, verbose_name='Goal')),
                ('duration_weeks', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duration (weeks)')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=50, verbose_name='Level')),
                ('sessions_per_week', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='Sessions per week')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Training Plan',
                'verbose_name_plural': 'Training Plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Session name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('session_type', models.CharField(choices=[('easy_run', 'Easy Run'), ('long_run', 'Long Run'), ('tempo_run', 'Tempo Run'), ('interval_training', 'Interval Training'), ('fartlek', 'Fartlek'), ('hill_training', 'Hill Training'), ('recovery_run', 'Recovery Run'), ('race_pace', 'Race Pace'), ('cross_training', 'Cross Training'), ('rest', 'Rest')], max_length=50, verbose_name='Session type')),
                ('planned_date', models.DateField(verbose_name='Planned date')),
                ('planned_duration', models.IntegerField(verbose_name='Planned duration (minutes)')),
                ('planned_distance', models.FloatField(blank=True, null=True, verbose_name='Planned distance (km)')),
                ('target_hr_zone', models.IntegerField(blank=True, choices=[(1, 'Zone 1'), (2, 'Zone 2'), (3, 'Zone 3'), (4, 'Zone 4'), (5, 'Zone 5')], null=True, verbose_name='Target HR zone')),
                ('target_pace_min', models.FloatField(blank=True, null=True, verbose_name='Target pace min (s/km)')),
                ('target_pace_max', models.FloatField(blank=True, null=True, verbose_name='Target pace max (s/km)')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('skipped', 'Skipped'), ('rescheduled', 'Rescheduled')], default='planned', max_length=50, verbose_name='Status')),
                ('actual_date', models.DateField(blank=True, null=True, verbose_name='Actual date')),
                ('actual_duration', models.IntegerField(blank=True, null=True, verbose_name='Actual duration (minutes)')),
                ('actual_distance', models.FloatField(blank=True, null=True, verbose_name='Actual distance (km)')),
                ('perceived_exertion', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Perceived exertion (1-10)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='planned_session', to='activities.activity')),
                ('training_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='coaching.trainingplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workout Session',
                'verbose_name_plural': 'Workout Sessions',
                'ordering': ['planned_date'],
                'indexes': [models.Index(fields=['user', 'planned_date'], name='coaching_wo_user_id_4f98d2_idx'), models.Index(fields=['training_plan', 'planned_date'], name='coaching_wo_trainin_b313e3_idx')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculation_date', models.DateField(verbose_name='Calculation date')),
                ('vma', models.FloatField(blank=True, null=True, verbose_name='VMA (km/h)')),
                ('vo2_max', models.FloatField(blank=True, null=True, verbose_name='VO2 Max')),
                ('fitness_7d', models.FloatField(blank=True, null=True, verbose_name='Fitness 7 days')),
                ('fitness_28d', models.FloatField(blank=True, null=True, verbose_name='Fitness 28 days')),
                ('fatigue_7d', models.FloatField(blank=True, null=True, verbose_name='Fatigue 7 days')),
                ('form', models.FloatField(blank=True, null=True, verbose_name='Form')),
                ('prediction_5k', models.TimeField(blank=True, null=True, verbose_name='5K prediction')),
                ('prediction_10k', models.TimeField(blank=True, null=True, verbose_name='10K prediction')),
                ('prediction_half_marathon', models.TimeField(blank=True, null=True, verbose_name='Half marathon prediction')),
                ('prediction_marathon', models.TimeField(blank=True, null=True, verbose_name='Marathon prediction')),
                ('endurance_ratio', models.FloatField(blank=True, null=True, verbose_name='Endurance ratio')),
                ('recommendation', models.TextField(blank=True, verbose_name='Recommendation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Performance Metrics',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['-calculation_date'],
                'indexes': [models.Index(fields=['user', 'calculation_date'], name='coaching_pe_user_id_3b508c_idx')],
                'unique_together': {('user', 'calculation_date')},
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Goal name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('goal_type', models.CharField(choices=[('time_goal', 'Time Goal'), ('distance_goal', 'Distance Goal'), ('frequency_goal', 'Frequency Goal'), ('weight_goal', 'Weight Goal'), ('fitness_goal', 'Fitness Goal')], max_length=50, verbose_name='Goal type')),
                ('target_value', models.FloatField(verbose_name='Target value')),
                ('target_unit', models.CharField(max_length=50, verbose_name='Target unit')),
                ('target_date', models.DateField(verbose_name='Target date')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Created date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_achieved', models.BooleanField(default=False, verbose_name='Is achieved')),
                ('achievement_date', models.DateField(blank=True, null=True, verbose_name='Achievement date')),
                ('current_value', models.FloatField(blank=True, null=True, verbose_name='Current value')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goal',
                'verbose_name_plural': 'Goals',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'target_date'], name='coaching_go_user_id_afaacc_idx')],
            },
        ),
        migrations.CreateModel(
            name='CoachingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True, verbose_name='Session ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('user_message', models.TextField(verbose_name='User message')),
                ('ai_response', models.TextField(verbose_name='AI response')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='Context data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Response time (seconds)')),
                ('user_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='User rating (1-5)')),
                ('user_feedback', models.TextField(blank=True, verbose_name='User feedback')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coaching_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coaching Session',
                'verbose_name_plural': 'Coaching Sessions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='coaching_co_user_id_3d1a99_idx')],
            },
        ),
    ]
